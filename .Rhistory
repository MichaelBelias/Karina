names(a)
View(a)
col.names(a)
colnames(a)
colnames(which(as.integer(a[2,])<10))
colnames()[which(as.integer(a[2,])<10)]
colnames()[which(as.integer(a[2,])<10),]
colnames(a)[which(as.integer(a[2,])<10),]
colnames(a)[which(as.integer(a[2,])<10)]
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +  geom_bar(aes(y = ..count..,
x = as.factor(" i ")),colour=""red"", fill=""blue"",data=KarinaDS") )))
}
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +  geom_bar(aes(y = ..count..,
x = as.factor(", i ,")),colour=""red"", fill=""blue"",data=KarinaDS") )))
}
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +  geom_bar(aes(y = ..count..,
x = as.factor(", i ,")),colour='red', fill='blue',data=KarinaDS") )))
}
paste("ggplot() +  geom_bar(aes(y = ..count..,
x = as.factor(", i ,")),colour='red', fill='blue',data=KarinaDS")
paste("ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour='red', fill='blue',data=KarinaDS") )
paste("ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour='red', fill='blue',data=KarinaDS")
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour='red', fill='blue',data=KarinaDS") )))
}
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour=red, fill=blue,data=KarinaDS") )))
}
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(", i ,")),
colour=red, fill=blue,data=KarinaDS") )))
}
library(foreign)
library(haven)
library(mice)
library(VIM)
library(ggplot2)
library(nnet)
library(foreign)
library(haven)
library(mice)
library(VIM)
library(ggplot2)
library(nnet)
library(foreign)
library(haven)
library(mice)
library(VIM)
library(ggplot2)
library(nnet)
KarinaDS <- read_sav("C:/Users/z047185/Desktop/Karina/Karina/NEW3 - exclusie - inclusief 2 pt GRainne 09122016.sav", user_na = F)
KarinaDS <- as.data.frame(KarinaDS)
ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(No_study)),colour="red", fill="blue",data=KarinaDS)
ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(Age_binair)),colour="red", fill="blue",data=KarinaDS)
ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(Gender)),colour="red", fill="blue",data=KarinaDS)
.libPaths()
install.packages("ggplot2", lib = "C:/Program Files/R/R-3.3.2/library")
install.packages("ggplot2", lib = "C:/Program Files/R/R-3.3.2/library")
install.packages("ggplot2", lib = "C:/Program Files/R/R-3.3.2/library")
install.packages(haven)
install.packages("haven")
install.packages(mice)
install.packages("mice")
install.packages("VIM")
install.packages("ggplot2")
install.packages("nnet")
library(foreign, lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(haven)
library(mice)
library(VIM)
library(ggplot2)
library(nnet)
library(foreign, lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(haven)
library(mice)
library(VIM)
library(ggplot2)
library(nnet)
library(haven)
library(mice)
library(VIM)
library(ggplot2)
library(nnet)
install.packages("data.table")
library(haven)
library(mice)
library(VIM)
library(ggplot2)
library(nnet)
library(haven,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(mice,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(VIM,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(foreign, lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(haven,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(mice,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(VIM,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(ggplot2)
library(nnet)
KarinaDS <- read_sav("C:/Users/z047185/Desktop/Karina/Karina/NEW3 - exclusie - inclusief 2 pt GRainne 09122016.sav", user_na = F)
KarinaDS <- as.data.frame(KarinaDS)
library(ggplot2,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(nnet,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
KarinaDS <- read_sav("C:/Users/z047185/Desktop/Karina/Karina/NEW3 - exclusie - inclusief 2 pt GRainne 09122016.sav", user_na = F)
KarinaDS <- as.data.frame(KarinaDS)
KarinaDS <- read_sav("C:/Users/z047185/Desktop/Karina/NEW3 - exclusie - inclusief 2 pt GRainne 09122016.sav", user_na = F)
KarinaDS <- as.data.frame(KarinaDS)
ggplot() +  ggtitle("Barplot of Number of Studies")
geom_bar(aes(y = ..count..,x = as.factor(No_study)),colour="red", fill="darkgreen",data=KarinaDS) +theme_light()
ggplot() +  ggtitle("Barplot of Number of Studies")
geom_bar(aes(y = ..count..,x = as.factor(No_study)),colour="red", fill="darkgreen",data=KarinaDS) +theme_light()
ggplot() +  ggtitle("Barplot of Number of Studies") +
geom_bar(aes(y = ..count..,x = as.factor(No_study)),colour="red", fill="darkgreen",data=KarinaDS) +theme_light()
a= matrix(ncol = dim(KarinaDS)[2], nrow = 2,
dimnames = list(c("Missing Percentage","Levels of variable"),names(KarinaDS)) )
for(i in 1:dim(KarinaDS)[2]){
a[1,i]=paste(round(sum(is.na(KarinaDS[,i]))*100/length(KarinaDS[,i]),2), "%",sep="")
a[2,i]= length(which(!is.na(unique(KarinaDS[,i]))))
}
View(a)
View(KarinaDS)
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(", i ,")),
colour=red, fill=blue,data=KarinaDS") )))
}
eval(parse(text=paste("ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(", i ,")),
colour=red, fill=blue,data=KarinaDS") ))
paste("ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour=red, fill=blue,data=KarinaDS") ))
paste("ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour=red, fill=blue,data=KarinaDS")
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour=red, fill=blue,data=KarinaDS") )))
}
k=1
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour=red, fill=blue,data=KarinaDS") )))
k=k+1
}
eval(parse(text=paste("ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour=red, fill=blue,data=KarinaDS") ))
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour=red, fill=blue,data=KarinaDS)") )))
k=k+1
}
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour='red', fill='blue',data=KarinaDS)") )))
k=k+1
}
Plot1
Plot2
Plot3
Plot3
Plot4
multiplot(p1, p2, p3, p4, cols=2)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(p1, p2, p3, p4, cols=2)
multiplot(Plot1, Plot2, Plot3, Plot4, cols=2)
k=1
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour='red', fill='darkgreen',data=KarinaDS) +theme_light()") )))
k=k+1
}
multiplot(Plot1, Plot2, Plot3, Plot4, cols=2)
multiplot(Plot5, Plot6, Plot7, Plot8, cols=2)
missing.percentage= paste(round(a*100, 2),"%",sep="")
names(missing.percentage)= names(KarinaDS)
missing.percentage[missing.percentage!="0%"]
a= matrix(ncol = dim(KarinaDS)[2], nrow = 2,
dimnames = list(c("Missing Percentage","Levels of variable"),names(KarinaDS)) )
for(i in 1:dim(KarinaDS)[2]){
a[1,i]=paste(round(sum(is.na(KarinaDS[,i]))*100/length(KarinaDS[,i]),2), "%",sep="")
a[2,i]= length(which(!is.na(unique(KarinaDS[,i]))))
}
missing.percentage= paste(round(a*100, 2),"%",sep="")
names(missing.percentage)= names(KarinaDS)
a= matrix(ncol = dim(KarinaDS)[2], nrow = 2,
dimnames = list(c("Missing Percentage","Levels of variable"),names(KarinaDS)) )
for(i in 1:dim(KarinaDS)[2]){
a[1,i]=paste(round(sum(is.na(KarinaDS[,i]))*100/length(KarinaDS[,i]),2), "%",sep="")
a[2,i]= length(which(!is.na(unique(KarinaDS[,i]))))
}
a[1,][a[1,]!="0%"]
a[1,][a[1,] =="0%"]
a[1,][a[1,] =="0%"]
y=rnorm(10)
x=rep(1,10)
lm(y~x)
ggplot() +  ggtitle('Barplot of Number of Studies') +
geom_bar(aes(y = ..count..,x = as.factor(No_study)),colour="red", fill="darkgreen",data=KarinaDS) +theme_light()
k=1
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +ggtitle('Barplot of",i," ') +   geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour='red', fill='darkgreen',data=KarinaDS) +theme_light()") )))
k=k+1
}
multiplot(Plot1, Plot2, Plot3, Plot4, cols=2)
multiplot(Plot5, Plot6, Plot7, Plot8, cols=2)
multiplot(Plot9, Plot10, Plot11, Plot12, cols=2)
multiplot(Plot13, Plot14, Plot15, Plot16, cols=2)
multiplot(Plot1, Plot2, Plot3, Plot4, cols=2)
multiplot(Plot5, Plot6, Plot7, Plot8, cols=2)
multiplot(Plot9, Plot10, Plot11, Plot12, cols=2)
multiplot(Plot13, Plot14, Plot15, Plot16, cols=2)
multiplot(Plot17, Plot18, Plot19, Plot20, cols=2)
multiplot(Plot21, Plot22, Plot23, Plot24, cols=2)
multiplot(Plot25, Plot26, Plot27, Plot28, cols=2)
multiplot(Plot29, Plot30, Plot31, Plot32, cols=2)
multiplot(Plot33, Plot34, Plot35, Plot36, cols=2)
multiplot(Plot37, Plot38, Plot39, Plot40, cols=2)
a= matrix(ncol = dim(KarinaDS)[2], nrow = 2,
dimnames = list(c("Missing Percentage","Levels of variable"),names(KarinaDS)) )
for(i in 1:dim(KarinaDS)[2]){
a[1,i]=paste(round(sum(is.na(KarinaDS[,i]))*100/length(KarinaDS[,i]),2), "%",sep="")
a[2,i]= length(which(!is.na(unique(KarinaDS[,i]))))
}
a[1,][a[1,] =="0%"]
a[1,][a[1,] =="0%"]
### Univariate models with Un-imputed data
k=1
for(i in names(KarinaDS)){
assign(paste("Uni.Fit", k,sep="") ,eval(parse(text=paste( "glm(data=KarinaDS, Bin_Response_50~", i ,", family=binomial)"))) )
k=k+1
}
Uni.Fit1
Uni.Fit2
View(KarinaDS)
### Univariate models with Un-imputed data
k=1
for(i in names(KarinaDS)){
assign(paste("Uni.Fit", k,sep="") ,eval(parse(text=paste( "glmer(data=KarinaDS, Bin_Response_50~", i ,"+(1|No_study), family=binomial)"))) )
k=k+1
}
library(lme4)
### Univariate models with Un-imputed data
k=1
for(i in names(KarinaDS)){
assign(paste("Uni.Fit", k,sep="") ,eval(parse(text=paste( "glmer(data=KarinaDS, Bin_Response_50~", i ,"+(1|No_study), family=binomial)"))) )
k=k+1
}
mlogit(KarinaDS$Klimova_response_3cat ~ Age, KarinaDS)
library(nnet,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
mlogit(KarinaDS$Klimova_response_3cat ~ Age, KarinaDS)
install.packages("npmlt")
library(npmlt)
library(npmlt)
install.packages("npmlt")
install.packages("npmlt", lib = "c:/Program Files/R/R-3.3.2/library/")
library(npmlt)
require(foreign)
require(ggplot2)
require(MASS)
require(Hmisc)
require(reshape2)
dat <- read.dta("http://www.ats.ucla.edu/stat/data/ologit.dta")
head(dat)
dat <- read.dta("http://www.ats.ucla.edu/stat/data/ologit.dta")
head(dat)
ml <- read.dta("http://www.ats.ucla.edu/stat/data/hsbdemo.dta")
head(ml)
with(ml, table(ses, prog))
with(ml, do.call(rbind, tapply(write, prog, function(x) c(M = mean(x), SD = sd(x)))))
ml$prog2 <- relevel(ml$prog, ref = "academic")
test <- multinom(prog2 ~ ses + write, data = ml)
with(ml, table(ses, prog))
with(ml, do.call(rbind, tapply(write, prog, function(x) c(M = mean(x), SD = sd(x)))))
ml$prog2 <- relevel(ml$prog, ref = "academic")
test <- multinom(prog2 ~ ses + write, data = ml)
library(nnet,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
require(foreign)
require(ggplot2)
require(MASS)
require(Hmisc)
require(reshape2)
require(foreign)
require(nnet)
require(ggplot2)
require(reshape2)
dat <- read.dta("http://www.ats.ucla.edu/stat/data/ologit.dta")
ml <- read.dta("http://www.ats.ucla.edu/stat/data/hsbdemo.dta")
head(dat)
head(ml)
with(ml, table(ses, prog))
with(ml, do.call(rbind, tapply(write, prog, function(x) c(M = mean(x), SD = sd(x)))))
ml$prog2 <- relevel(ml$prog, ref = "academic")
test <- multinom(prog2 ~ ses + write, data = ml)
multinom(prog2 ~ ses + write, data = ml)
require(nnet)
m <- polr(apply ~ pared + public + gpa, data = dat, Hess=TRUE)
## view a summary of the model
summary(m)
summary(m)
(ctable <- coef(summary(m)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
## combined table
(ctable <- cbind(ctable, "p value" = p))
(ci <- confint(m))
confint.default(m)
## odds ratios
exp(coef(m))
exp(coef(1))
exp(1.04)
summary(m)
exp(1.04769)
exp(coef(m))
exp(cbind(OR = coef(m), ci))
glm(I(as.numeric(apply) >= 2) ~ pared, family="binomial", data = dat)
glm(I(as.numeric(apply) >= 3) ~ pared, family="binomial", data = dat)
17513,55
17513.55
17513+8193
17513+8193+700
+500
17513+8193+700 +500
library(foreign, lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(haven,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(mice,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(VIM,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(ggplot2,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(nnet,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(lme4)
library(npmlt)
library(foreign, lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(haven,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(mice,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(VIM,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(ggplot2,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(nnet,lib.loc = "c:/Program Files/R/R-3.3.2/library/")
library(lme4)
library(npmlt)
KarinaDS <- read_sav("C:/Users/z047185/Desktop/Karina/NEW3 - exclusie - inclusief 2 pt GRainne 09122016.sav", user_na = F)
KarinaDS <- as.data.frame(KarinaDS)
ggplot() +  ggtitle('Barplot of Number of Studies') +
geom_bar(aes(y = ..count..,x = as.factor(No_study)),colour="red", fill="darkgreen",data=KarinaDS) +theme_light()
ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(Age_binair)),colour="red", fill="blue",data=KarinaDS)
ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(Gender)),colour="red", fill="blue",data=KarinaDS)
ggplot() + geom_histogram(aes(x = Age),data=KarinaDS,colour = 'red',fill = 'blue') + theme_classic()
ggplot() +  geom_histogram(aes(y = ..count..,x = RBC_before),colour="red", fill="blue",data=KarinaDS)
ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(RBCbefore_binairy)),colour="red", fill="blue",data=KarinaDS)
k=1
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +ggtitle('Barplot of",i," ') +   geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour='red', fill='darkgreen',data=KarinaDS) +theme_light()") )))
k=k+1
}
a= matrix(ncol = dim(KarinaDS)[2], nrow = 2,
dimnames = list(c("Missing Percentage","Levels of variable"),names(KarinaDS)) )
a= matrix(ncol = dim(KarinaDS)[2], nrow = 2,
dimnames = list(c("Missing Percentage","Levels of variable"),names(KarinaDS)) )
for(i in 1:dim(KarinaDS)[2]){
a[1,i]=paste(round(sum(is.na(KarinaDS[,i]))*100/length(KarinaDS[,i]),2), "%",sep="")
a[2,i]= length(which(!is.na(unique(KarinaDS[,i]))))
}
k=1
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +ggtitle('Barplot of",i," ') +   geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour='red', fill='darkgreen',data=KarinaDS) +theme_light()") )))
k=k+1
}
multiplot(Plot1, Plot2, Plot3, Plot4, cols=2)
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(Plot1, Plot2, Plot3, Plot4, cols=2)
multiplot(Plot5, Plot6, Plot7, Plot8, cols=2)
k=1
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +ggtitle('Barplot of",i," ') + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +   geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour='red', fill='darkgreen',data=KarinaDS) +theme_light()") )))
k=k+1
}
multiplot(Plot1, Plot2, Plot3, Plot4, cols=2)
multiplot(Plot5, Plot6, Plot7, Plot8, cols=2)
multiplot(Plot9, Plot10, Plot11, Plot12, cols=2)
multiplot(Plot13, Plot14, Plot15, Plot16, cols=2)
multiplot(Plot17, Plot18, Plot19, Plot20, cols=2)
multiplot(Plot21, Plot22, Plot23, Plot24, cols=2)
multiplot(Plot25, Plot26, Plot27, Plot28, cols=2)
multiplot(Plot29, Plot30, Plot31, Plot32, cols=2)
multiplot(Plot33, Plot34, Plot35, Plot36, cols=2)
a[1,][a[1,] =="0%"]
ggplot() +  geom_bar(aes(y = ..count..,x = as.factor(Age_binair)),colour="red", fill="blue",data=KarinaDS)+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
k=1
for(i in colnames(a)[which(as.integer(a[2,])<10)] ){
assign(paste("Plot", k,sep="") , eval(parse(text=paste("ggplot() +ggtitle('Barplot of",i," ') + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   geom_bar(aes(y = ..count..,x = as.factor(", i ,")),colour='red', fill='darkgreen',data=KarinaDS) +theme_light()") )))
k=k+1
}
multiplot(Plot5, Plot6, Plot7, Plot8, cols=2)
ggplot() +  ggtitle('Barplot of Number of Studies') +
geom_bar(aes(y = ..count..,x = as.factor(No_study)),colour="red", fill="darkgreen",data=KarinaDS) +theme_light()
ggplot(aes(y = ..count..,x = as.factor(No_study)),colour="red", fill="darkgreen",data=KarinaDS)
ggplot() +  ggtitle('Barplot of Number of Studies') +
geom_bar(aes(y = ..count..,x = as.factor(No_study)),colour="red", fill="darkgreen",data=KarinaDS)+ geom_bar(width = 1)  +theme_light()
ggplot() +  ggtitle('Barplot of Number of Studies') +
geom_bar(aes(y = ..count..,x = as.factor(No_study)),colour="red", fill="darkgreen",data=KarinaDS)+ geom_bar(width = 1)+ coord_polar(theta=”y”)   +theme_light()
ggplot() +  ggtitle('Barplot of Number of Studies') +
geom_bar(aes(y = ..count..,x = as.factor(No_study)),colour="red", fill="darkgreen",data=KarinaDS)+ geom_bar(width = 1) + coord_polar(theta='y')  +theme_light()
ggplot(data=KarinaDS,
aes(x=factor(1),
y=Summary,
fill = factor(No_study)
) )
ggplot(data=KarinaDS,
aes(x=factor(No_study),
y=Summary,
fill = factor(No_study)
) )
ggplot(data=KarinaDS,
aes(x=factor(No_study),
y=Summary,
fill = "darkgreen"
) )
ggplot(data=KarinaDS,
aes(x=factor(No_study),
y=..count..,
fill = "darkgreen"
) )
ggplot(data=KarinaDS,
aes(x=factor(1),
y=as.factor(No_study)),
fill = "darkgreen"
) )
ggplot(data=KarinaDS,
aes(x=factor(1),
y=as.factor(No_study),
fill = "darkgreen")
)
ggplot(data=KarinaDS,
aes(x=factor(1),
y=as.factor(No_study),
fill = as.factor(No_study))
)
ggplot(data=KarinaDS,
aes(x=factor(1),fill = as.factor(No_study))
)
ggplot(data=KarinaDS,
aes(x=factor(1),fill = as.factor(No_study)) + geom_bar(width = 1)
)
ggplot(data=KarinaDS,
aes(x=factor(1),fill = as.factor(No_study))       ) + geom_bar(width = 1)
ggplot(data=KarinaDS,
aes(x=factor(1),fill = as.factor(No_study))) + geom_bar(width = 1)+ coord_polar(theta = "y")
ggplot(data=KarinaDS,
aes(x=factor(1),fill = as.factor(No_study))) + geom_bar(width = 1)+ coord_polar(theta = "y")
length(as.factor(No_study))/3
length(as.factor(KarinaDS$No_study))/3
as.factor(No_study)
as.factor(KarinaDS$No_study)
length(unique(as.factor(No_study)))/3
length(unique(as.factor(KarinaDS$No_study)))/3
library(foreign)
a<- read_spss("//umcn.nl/apps/Appsense/z047185/RedirectedFolders/Desktop/Meta regression")
a<- read_spss("//umcn.nl/apps/Appsense/z047185/RedirectedFolders/Desktop/Meta regression/Meta-Regression.sav")
View(a)
View(a)
